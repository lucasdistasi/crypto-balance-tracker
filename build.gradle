plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'jacoco'
}

group = 'com.distasilucas'
version = '1.0.0-SNAPSHOT'

bootJar {
	archiveFileName = "${project.name}.jar"
	launchScript()
}

ext {
	jacocoVersion = "0.8.9"
	jacocoExecPath = "${project.rootDir}/../target/jacoco.exec"
	lombokVersion = "1.18.30"
	springDocVersion = "2.2.0"
}

java {
	sourceCompatibility = JavaVersion.VERSION_21
}

jacoco {
	toolVersion = jacocoVersion
}

repositories {
	mavenCentral()
}

dependencies {
	implementation "org.springframework.boot:spring-boot-starter-actuator"
	implementation "org.springframework.boot:spring-boot-starter-data-mongodb"
	implementation "org.springframework.boot:spring-boot-starter-validation"
	implementation "org.springframework.boot:spring-boot-starter-web"
	implementation "org.springframework.boot:spring-boot-starter-webflux"
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springDocVersion}"
	implementation "org.springframework.boot:spring-boot-starter-data-mongodb"

	compileOnly "org.projectlombok:lombok:${lombokVersion}"

	annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

	testImplementation "org.springframework.boot:spring-boot-starter-test"
	testImplementation "io.projectreactor:reactor-test"
}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}

jacocoTestReport {
	dependsOn test

	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					"**/CryptoBalanceTrackerApplication**",
					"**/configuration/**"
			])
		}))
	}

	reports {
		csv.required.set(true)
		html.required.set(true)
	}
}

test {
	finalizedBy jacocoTestReport
}