plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'jacoco'
}

group = 'com.distasilucas'
version = '1.0.0-SNAPSHOT'

bootJar {
	archiveFileName = "${project.name}.jar"
	launchScript()
}

ext {
	ehcacheVersion = "3.10.8"
	jacocoVersion = "0.8.12"
	jacocoExecPath = "${project.rootDir}/../target/jacoco.exec"
	javaxCacheVersion = "1.1.1"
	aspectjweaverVersion = "1.9.22.1"
	jsonWebTokenVersion = "0.12.6"
	liquibaseVersion = "4.28.0"
	lombokVersion = "1.18.34"
	okHttp3Version = "4.12.0"
	postgresqlVersion = "42.7.3"
	springDocVersion = "2.6.0"
	springRetryVersion = "2.0.6"
}

java {
	sourceCompatibility = JavaVersion.VERSION_21
}

jacoco {
	toolVersion = jacocoVersion
}

repositories {
	mavenCentral()
}

dependencies {
	implementation "org.springframework.boot:spring-boot-starter-actuator"
	implementation "org.springframework.boot:spring-boot-starter-validation"
	implementation "org.springframework.boot:spring-boot-starter-web"
	implementation "org.springframework.boot:spring-boot-starter-cache"
	implementation "org.springframework.boot:spring-boot-starter-data-jpa"
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:$springDocVersion"
	implementation "org.postgresql:postgresql:$postgresqlVersion"
	implementation "org.springframework.boot:spring-boot-starter-security"
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:$springDocVersion"
	implementation "org.springframework.retry:spring-retry:$springRetryVersion"
	implementation "org.liquibase:liquibase-core:$liquibaseVersion"
	implementation "com.squareup.okhttp3:okhttp:$okHttp3Version"
	implementation "org.ehcache:ehcache:$ehcacheVersion"
	implementation "javax.cache:cache-api:$javaxCacheVersion"
	implementation "io.jsonwebtoken:jjwt-api:$jsonWebTokenVersion"

	compileOnly "org.projectlombok:lombok:$lombokVersion"

	runtimeOnly "org.aspectj:aspectjweaver:$aspectjweaverVersion"
	runtimeOnly "io.jsonwebtoken:jjwt-impl:$jsonWebTokenVersion"
	runtimeOnly "io.jsonwebtoken:jjwt-jackson:$jsonWebTokenVersion"

	annotationProcessor "org.projectlombok:lombok:$lombokVersion"

	testImplementation "com.squareup.okhttp3:mockwebserver:$okHttp3Version"
	testImplementation "org.springframework.boot:spring-boot-starter-test"
	testImplementation "org.springframework.security:spring-security-test"
}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}

jacocoTestReport {
	dependsOn test

	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					"**/CryptoBalanceTrackerApplication**",
					"**/configuration/**"
			])
		}))
	}

	reports {
		csv.required.set(true)
		html.required.set(true)
	}
}

test {
	finalizedBy jacocoTestReport
}